{"ast":null,"code":"var _jsxFileName = \"C:\\\\++Cvele\\\\++B2B\\\\Project\\\\B2B\\\\buyer\\\\src\\\\components\\\\header\\\\DropdownLanguage.jsx\";\n// react\nimport React from 'react'; // third-party\n// application\n\nimport Dropdown from './Dropdown';\nimport { localeChange } from '../../store/locale';\n\nfunction DropdownLanguage(props) {\n  const locale = props.locale,\n        changeLocale = props.localeChange;\n  const languages = [{\n    title: 'English',\n    locale: 'en',\n    code: 'EN',\n    icon: 'images/languages/language-1.png',\n    icon_srcset: 'images/languages/language-1.png 1x, images/languages/language-1@2x.png 2x'\n  }, {\n    title: 'Russian',\n    locale: 'ru',\n    code: 'RU',\n    icon: 'images/languages/language-2.png',\n    icon_srcset: 'images/languages/language-2.png 1x, images/languages/language-2@2x.png 2x'\n  }];\n  const language = languages.find(x => x.locale === locale);\n  const title = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"topbar__item-value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, language.code));\n  return React.createElement(Dropdown, {\n    title: title,\n    withIcons: true,\n    items: languages,\n    onClick: item => changeLocale(item.locale),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n}\n\nconst mapStateToProps = state => ({\n  locale: state.locale\n});\n\nconst mapDispatchToProps = {\n  localeChange\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownLanguage);","map":{"version":3,"sources":["C:/++Cvele/++B2B/Project/B2B/buyer/src/components/header/DropdownLanguage.jsx"],"names":["React","Dropdown","localeChange","DropdownLanguage","props","locale","changeLocale","languages","title","code","icon","icon_srcset","language","find","x","item","mapStateToProps","state","mapDispatchToProps","connect"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,QACrBC,MADqB,GACkBD,KADlB,CACrBC,MADqB;AAAA,QACCC,YADD,GACkBF,KADlB,CACbF,YADa;AAG7B,QAAMK,SAAS,GAAG,CACd;AACIC,IAAAA,KAAK,EAAE,SADX;AAEIH,IAAAA,MAAM,EAAE,IAFZ;AAGII,IAAAA,IAAI,EAAE,IAHV;AAIIC,IAAAA,IAAI,EAAE,iCAJV;AAKIC,IAAAA,WAAW,EAAE;AALjB,GADc,EAQd;AACIH,IAAAA,KAAK,EAAE,SADX;AAEIH,IAAAA,MAAM,EAAE,IAFZ;AAGII,IAAAA,IAAI,EAAE,IAHV;AAIIC,IAAAA,IAAI,EAAE,iCAJV;AAKIC,IAAAA,WAAW,EAAE;AALjB,GARc,CAAlB;AAiBA,QAAMC,QAAQ,GAAGL,SAAS,CAACM,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACT,MAAF,KAAaA,MAAnC,CAAjB;AAEA,QAAMG,KAAK,GACP,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCI,QAAQ,CAACH,IAA/C,CADJ,CADJ;AAMA,SACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAED,KADX;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,KAAK,EAAED,SAHX;AAII,IAAA,OAAO,EAAGQ,IAAD,IAAUT,YAAY,CAACS,IAAI,CAACV,MAAN,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH;;AAED,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAChCZ,EAAAA,MAAM,EAAEY,KAAK,CAACZ;AADkB,CAAZ,CAAxB;;AAIA,MAAMa,kBAAkB,GAAG;AACvBhB,EAAAA;AADuB,CAA3B;AAIA,eAAeiB,OAAO,CAACH,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,gBAA7C,CAAf","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\n\n// application\nimport Dropdown from './Dropdown';\nimport { localeChange } from '../../store/locale';\n\n\nfunction DropdownLanguage(props) {\n    const { locale, localeChange: changeLocale } = props;\n\n    const languages = [\n        {\n            title: 'English',\n            locale: 'en',\n            code: 'EN',\n            icon: 'images/languages/language-1.png',\n            icon_srcset: 'images/languages/language-1.png 1x, images/languages/language-1@2x.png 2x',\n        },\n        {\n            title: 'Russian',\n            locale: 'ru',\n            code: 'RU',\n            icon: 'images/languages/language-2.png',\n            icon_srcset: 'images/languages/language-2.png 1x, images/languages/language-2@2x.png 2x',\n        },\n    ];\n\n    const language = languages.find((x) => x.locale === locale);\n\n    const title = (\n        <React.Fragment>\n            <span className=\"topbar__item-value\">{language.code}</span>\n        </React.Fragment>\n    );\n\n    return (\n        <Dropdown\n            title={title}\n            withIcons\n            items={languages}\n            onClick={(item) => changeLocale(item.locale)}\n        />\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    locale: state.locale,\n});\n\nconst mapDispatchToProps = {\n    localeChange,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownLanguage);\n"]},"metadata":{},"sourceType":"module"}