{"ast":null,"code":"var _jsxFileName = \"C:\\\\++Cvele\\\\++B2B\\\\Project\\\\B2B\\\\buyer\\\\src\\\\components\\\\shared\\\\HomeArticleList.jsx\";\n// react\nimport React, { Component } from 'react'; // third party\n\nimport axios from 'axios';\nconst API = 'https://hn.algolia.com/api/v1/search?query=';\nconst DEFAULT_QUERY = 'redux';\nexport class HomeArticleList extends Component {\n  constructor() {\n    super();\n\n    this.renderPreloadeBlock = () => {\n      if (this.state.isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"loader\");\n      }\n    };\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    }); //axios.get('../../../data/data.json')\n    //    .then(response => {\n    //        this.setState({\n    //            hits: response.data.hits,\n    //            isLoading: false\n    //        });\n    //    }).catch(function (error) {\n    //        console.log(error);\n    //    });\n\n    fetch('../../../data/data.json').then(response => response.json()).then(data => this.setState({\n      hits: data.hits,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          hits = _this$state.hits,\n          isLoading = _this$state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Loading ...\");\n    }\n\n    return React.createElement(\"ul\", {\n      className: \"home-article__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.hits.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, item.title)));\n  }\n\n}","map":{"version":3,"sources":["C:/++Cvele/++B2B/Project/B2B/buyer/src/components/shared/HomeArticleList.jsx"],"names":["React","Component","axios","API","DEFAULT_QUERY","HomeArticleList","constructor","renderPreloadeBlock","state","isLoading","hits","error","componentDidMount","setState","fetch","then","response","json","data","catch","render","map","item","title"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,6CAAZ;AACA,MAAMC,aAAa,GAAG,OAAtB;AAEA,OAAO,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAC3CK,EAAAA,WAAW,GAAG;AACV;;AADU,SA+BdC,mBA/Bc,GA+BQ,MAAM;AACxB,UAAI,KAAKC,KAAL,CAAWC,SAAf,EAA0B;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;AACJ,KAnCa;;AAGV,SAAKD,KAAL,GAAa;AACTE,MAAAA,IAAI,EAAE,EADG;AAETD,MAAAA,SAAS,EAAE,KAFF;AAGTE,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVJ,MAAAA,SAAS,EAAE;AADD,KAAd,EADgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAK,IAAAA,KAAK,CAAC,yBAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKL,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAEQ,IAAI,CAACR,IAAb;AAAmBD,MAAAA,SAAS,EAAE;AAA9B,KAAd,CAFlB,EAGKU,KAHL,CAGWR,KAAK,IAAI,KAAKE,QAAL,CAAc;AAAEF,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CAHpB;AAIH;;AAQDW,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKZ,KAD5B;AAAA,UACGE,IADH,eACGA,IADH;AAAA,UACSD,SADT,eACSA,SADT;;AAGL,QAAIA,SAAJ,EAAe;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;AAED,WACI;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKD,KAAL,CAAWE,IAAX,CAAgBW,GAAhB,CAAoBC,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,KAAV,CAA5B,CADN,CADJ;AAaH;;AA1D0C","sourcesContent":["// react\nimport React, { Component } from 'react';\r\n\r\n// third party\r\nimport axios from 'axios';\r\n\r\nconst API = 'https://hn.algolia.com/api/v1/search?query=';\r\nconst DEFAULT_QUERY = 'redux';\r\n\r\nexport class HomeArticleList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hits: [],\r\n            isLoading: false,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        //axios.get('../../../data/data.json')\r\n        //    .then(response => {\r\n        //        this.setState({\r\n        //            hits: response.data.hits,\r\n        //            isLoading: false\r\n        //        });\r\n        //    }).catch(function (error) {\r\n        //        console.log(error);\r\n        //    });\r\n\r\n        fetch('../../../data/data.json')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ hits: data.hits, isLoading: false }))\r\n            .catch(error => this.setState({ error, isLoading: false }));\r\n    }\r\n\r\n    renderPreloadeBlock = () => {\r\n        if (this.state.isLoading) {\r\n            return <div>loader</div>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { hits, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading ...</p>;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"home-article__list\">\r\n                { this.state.hits.map(item => <li>{item.title}</li>) }\r\n\r\n                {/*\r\n                {hits.map(hit =>\r\n                    <li key={hit.objectID} className=\"home-article__item\">\r\n                        <a href={hit.url}>{hit.title}</a>\r\n                    </li>\r\n                )}\r\n                */}\r\n            </ul>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}