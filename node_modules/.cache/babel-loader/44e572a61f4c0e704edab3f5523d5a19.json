{"ast":null,"code":"var _jsxFileName = \"C:\\\\++Cvele\\\\++B2B\\\\Project\\\\B2B\\\\buyer\\\\src\\\\components\\\\shared\\\\Modal.jsx\";\n// react\nimport React, { Component } from 'react'; // third-party\n\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nexport class Modal extends Component {\n  constructor(props) {\n    super();\n\n    this.setWrapperRef = node => {\n      this.wrapperRef = node;\n    };\n\n    this.handleOutsideClick = event => {\n      //const { open } = this.state;\n      if (this.wrapperRef && this.wrapperRef.contains(event.target) && open) {\n        this.close();\n      } //if (this.node.contains(event.target)) {\n      //    this.close();\n      //}\n\n    };\n\n    this.renderModal = () => {\n      const showHideClassName = this.state.show ? \"modal display-block\" : \"modal display-none\";\n      return React.createElement(\"div\", {\n        className: showHideClassName,\n        ref: node => this.node = node,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"modal-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.children, React.createElement(\"button\", {\n        onClick: this.state.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"close\")));\n    };\n\n    this.state = {\n      name: props.name,\n      show: props.show,\n      children: props.children,\n      onClose: props.onClose\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleOutsideClick);\n  }\n\n  open() {\n    this.setState(() => ({\n      open: true\n    }));\n  }\n\n  close() {\n    this.setState(() => ({\n      open: false\n    }));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.renderModal());\n  }\n\n}","map":{"version":3,"sources":["C:/++Cvele/++B2B/Project/B2B/buyer/src/components/shared/Modal.jsx"],"names":["React","Component","ReactDOM","PropTypes","Modal","constructor","props","setWrapperRef","node","wrapperRef","handleOutsideClick","event","contains","target","open","close","renderModal","showHideClassName","state","show","children","onClose","name","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","setState","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;;AADe,SAmBnBC,aAnBmB,GAmBFC,IAAD,IAAU;AACtB,WAAKC,UAAL,GAAkBD,IAAlB;AACH,KArBkB;;AAAA,SAuBnBE,kBAvBmB,GAuBGC,KAAD,IAAW;AAC5B;AAEA,UAAI,KAAKF,UAAL,IAAmB,KAAKA,UAAL,CAAgBG,QAAhB,CAAyBD,KAAK,CAACE,MAA/B,CAAnB,IAA6DC,IAAjE,EAAuE;AACnE,aAAKC,KAAL;AACH,OAL2B,CAO5B;AACA;AACA;;AACH,KAjCkB;;AAAA,SA+CnBC,WA/CmB,GA+CL,MAAM;AAChB,YAAMC,iBAAiB,GAAG,KAAKC,KAAL,CAAWC,IAAX,GAAkB,qBAAlB,GAA0C,oBAApE;AAEA,aACI;AAAK,QAAA,SAAS,EAAEF,iBAAhB;AAAmC,QAAA,GAAG,EAAET,IAAI,IAAI,KAAKA,IAAL,GAAYA,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAS,QAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWc,QADhB,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,CADJ;AAUH,KA5DkB;;AAGf,SAAKH,KAAL,GAAa;AACTI,MAAAA,IAAI,EAAEhB,KAAK,CAACgB,IADH;AAETH,MAAAA,IAAI,EAAEb,KAAK,CAACa,IAFH;AAGTC,MAAAA,QAAQ,EAAEd,KAAK,CAACc,QAHP;AAITC,MAAAA,OAAO,EAAEf,KAAK,CAACe;AAJN,KAAb;AAMH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKf,kBAA5C;AACH;;AAEDgB,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0C,KAAKjB,kBAA/C;AACH;;AAkBDI,EAAAA,IAAI,GAAG;AACH,SAAKc,QAAL,CAAc,OAAO;AACjBd,MAAAA,IAAI,EAAE;AADW,KAAP,CAAd;AAGH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,SAAKa,QAAL,CAAc,OAAO;AACjBd,MAAAA,IAAI,EAAE;AADW,KAAP,CAAd;AAGH;;AAiBDe,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,WAAL,EADL,CADJ;AAMH;;AAtEgC","sourcesContent":["// react\nimport React, { Component } from 'react';\n\n// third-party\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport class Modal extends Component {\n    constructor(props) {\n        super();\r\n\r\n        this.state = {\r\n            name: props.name,\r\n            show: props.show,\r\n            children: props.children,\r\n            onClose: props.onClose\r\n        }\r\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapperRef = node;\n    };\n\n    handleOutsideClick = (event) => {\n        //const { open } = this.state;\n\n        if (this.wrapperRef && this.wrapperRef.contains(event.target) && open) {\n            this.close();\n        }\r\n\r\n        //if (this.node.contains(event.target)) {\r\n        //    this.close();\r\n        //}\r\n    };\n\n    open() {\n        this.setState(() => ({\n            open: true,\n        }));\n    }\n\n    close() {\n        this.setState(() => ({\n            open: false,\n        }));\n    }\n\n    renderModal = () => {\n        const showHideClassName = this.state.show ? \"modal display-block\" : \"modal display-none\";\n        \n        return (\n            <div className={showHideClassName} ref={node => this.node = node}>\n                <section className=\"modal-main\">\n                    {this.props.children}\n                    <button onClick={this.state.onClose}>\n                        close\n                    </button>\n                </section>\n            </div>\n        );\r\n    }\n    \n    render() {\n        return (\n            <React.Fragment>\n                {this.renderModal()}\n            </React.Fragment>\n        );\n        \r\n    }\n}"]},"metadata":{},"sourceType":"module"}