{"ast":null,"code":"var _jsxFileName = \"C:\\\\++Cvele\\\\++B2B\\\\Project\\\\B2B\\\\buyer\\\\src\\\\components\\\\shared\\\\Modal.jsx\";\n// react\nimport React, { Component } from 'react'; // third-party\n\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nexport class Modal extends Component {\n  constructor(props) {\n    super();\n\n    this.setWrapperRef = node => {\n      this.wrapperRef = node;\n    };\n\n    this.handleOutsideClick = event => {\n      const open = this.state.open;\n\n      if (this.wrapperRef && this.wrapperRef.contains(event.target) && open) {\n        this.close();\n      } //if (this.node.contains(event.target)) {\n      //    this.close();\n      //}\n\n    };\n\n    this.renderModal = () => {\n      const showHideClassName = this.state.show ? \"modal display-block\" : \"modal display-none\";\n      return React.createElement(\"div\", {\n        className: showHideClassName,\n        ref: node => this.node = node,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"modal-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.children, React.createElement(\"button\", {\n        onClick: this.state.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"close\")));\n    };\n\n    this.renderSmallModal = () => {\n      const showHideClassName = this.state.show ? \"modal modal-sm display-block\" : \"modal modal-sm display-none\";\n      return React.createElement(\"div\", {\n        className: showHideClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"modal-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.state.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"close\")));\n    };\n\n    this.state = {\n      name: props.name,\n      show: props.show,\n      children: props.children,\n      onClose: props.onClose\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleOutsideClick);\n  }\n\n  open() {\n    this.setState(() => ({\n      open: true\n    }));\n  }\n\n  close() {\n    this.setState(() => ({\n      open: false\n    }));\n  }\n\n  render() {\n    switch (this.state.name) {\n      case \"modal\":\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, this.renderModal());\n\n      case \"modal-sm\":\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, this.renderSmallModal());\n\n      default:\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/++Cvele/++B2B/Project/B2B/buyer/src/components/shared/Modal.jsx"],"names":["React","Component","ReactDOM","PropTypes","Modal","constructor","props","setWrapperRef","node","wrapperRef","handleOutsideClick","event","open","state","contains","target","close","renderModal","showHideClassName","show","children","onClose","renderSmallModal","name","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","setState","render"],"mappings":"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","sourcesContent":["// react\nimport React, { Component } from 'react';\n\n// third-party\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport class Modal extends Component {\n    constructor(props) {\n        super();\r\n\r\n        this.state = {\r\n            name: props.name,\r\n            show: props.show,\r\n            children: props.children,\r\n            onClose: props.onClose\r\n        }\r\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapperRef = node;\n    };\n\n    handleOutsideClick = (event) => {\n        const { open } = this.state;\n\n        if (this.wrapperRef && this.wrapperRef.contains(event.target) && open) {\n            this.close();\n        }\r\n\r\n        //if (this.node.contains(event.target)) {\r\n        //    this.close();\r\n        //}\r\n    };\n\n    open() {\n        this.setState(() => ({\n            open: true,\n        }));\n    }\n\n    close() {\n        this.setState(() => ({\n            open: false,\n        }));\n    }\n\n    renderModal = () => {\n        const showHideClassName = this.state.show ? \"modal display-block\" : \"modal display-none\";\n        \n        return (\n            <div className={showHideClassName} ref={node => this.node = node}>\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                    </div>\n                    <div>\n                    </div>\n                </div>\n                <section className=\"modal-main\">\n                    {this.props.children}\n                    <button onClick={this.state.onClose}>\n                        close\n                    </button>\n                </section>\n            </div>\n        );\r\n    }\n\n    renderSmallModal = () => {\n        const showHideClassName = this.state.show ? \"modal modal-sm display-block\" : \"modal modal-sm display-none\";\r\n\r\n        return (\r\n            <div className={showHideClassName}>\r\n                <section className=\"modal-main\">\n                    \n                    <button onClick={this.state.onClose}>\n                        close\n                    </button>\n                </section>\r\n            </div>\r\n        );\r\n    }\n\n    render() {\n        switch (this.state.name) {\n            case \"modal\":\r\n                return (\r\n                    <React.Fragment>\n                        {this.renderModal()}\n                    </React.Fragment>\r\n                );\r\n            case \"modal-sm\":\r\n                return (\r\n                    <React.Fragment>\n                        {this.renderSmallModal()}\n                    </React.Fragment>\r\n                );\r\n            default:\r\n        }\r\n    }\n}"]},"metadata":{},"sourceType":"module"}