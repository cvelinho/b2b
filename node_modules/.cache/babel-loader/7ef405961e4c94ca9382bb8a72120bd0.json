{"ast":null,"code":"var _jsxFileName = \"C:\\\\++Cvele\\\\++B2B\\\\Project\\\\B2B\\\\buyer\\\\src\\\\components\\\\shared\\\\Modal.jsx\";\n// react\nimport React, { Component } from 'react'; // third-party\n\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nexport class Modal extends Component {\n  constructor(props) {\n    super();\n\n    this.setWrapperRef = node => {\n      this.wrapperRef = node;\n    };\n\n    this.handleOutsideClick = evt => {\n      const open = this.state.open;\n\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target) && open) {\n        this.close();\n      }\n    };\n\n    this.renderModal = () => {\n      const showHideClassName = this.state.show ? \"modal display-block\" : \"modal display-none\";\n      return React.createElement(\"div\", {\n        className: showHideClassName,\n        ref: this.setWrapperRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"modal-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.children, React.createElement(\"button\", {\n        onClick: this.state.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"close\")));\n    };\n\n    this.state = {\n      name: props.name,\n      show: props.show,\n      children: props.children,\n      onClose: props.onClose,\n      //\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleOutsideClick);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.renderModal());\n  }\n\n}\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClickOutside: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/++Cvele/++B2B/Project/B2B/buyer/src/components/shared/Modal.jsx"],"names":["React","Component","ReactDOM","PropTypes","Modal","constructor","props","setWrapperRef","node","wrapperRef","handleOutsideClick","evt","open","state","contains","event","target","close","renderModal","showHideClassName","show","children","onClose","name","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","propTypes","isRequired","onClickOutside","func"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;;AADe,SA2BnBC,aA3BmB,GA2BFC,IAAD,IAAU;AACtB,WAAKC,UAAL,GAAkBD,IAAlB;AACH,KA7BkB;;AAAA,SA+BnBE,kBA/BmB,GA+BGC,GAAD,IAAS;AAAA,YAClBC,IADkB,GACT,KAAKC,KADI,CAClBD,IADkB;;AAG1B,UAAI,KAAKH,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgBK,QAAhB,CAAyBC,KAAK,CAACC,MAA/B,CAApB,IAA8DJ,IAAlE,EAAwE;AACpE,aAAKK,KAAL;AACH;AACJ,KArCkB;;AAAA,SAuCnBC,WAvCmB,GAuCL,MAAM;AAChB,YAAMC,iBAAiB,GAAG,KAAKN,KAAL,CAAWO,IAAX,GAAkB,qBAAlB,GAA0C,oBAApE;AAEA,aACI;AAAK,QAAA,SAAS,EAAED,iBAAhB;AAAmC,QAAA,GAAG,EAAE,KAAKZ,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAS,QAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWe,QADhB,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,CADJ;AAUH,KApDkB;;AAGf,SAAKT,KAAL,GAAa;AACTU,MAAAA,IAAI,EAAEjB,KAAK,CAACiB,IADH;AAETH,MAAAA,IAAI,EAAEd,KAAK,CAACc,IAFH;AAGTC,MAAAA,QAAQ,EAAEf,KAAK,CAACe,QAHP;AAITC,MAAAA,OAAO,EAAEhB,KAAK,CAACgB,OAJN;AAMT;AACAV,MAAAA,IAAI,EAAE;AAPG,KAAb;AASH;;AAODY,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKhB,kBAAxC;AACH;;AAEDiB,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAKlB,kBAA3C;AACH;;AA6BDmB,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,WAAL,EADL,CADJ;AAMH;;AA9DgC;AAAxBd,K,CAeF0B,S,GAAY;AACfT,EAAAA,QAAQ,EAAElB,SAAS,CAACK,IAAV,CAAeuB,UADV;AAEfC,EAAAA,cAAc,EAAE7B,SAAS,CAAC8B,IAAV,CAAeF;AAFhB,C","sourcesContent":["// react\nimport React, { Component } from 'react';\n\n// third-party\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport class Modal extends Component {\n    constructor(props) {\n        super();\r\n\r\n        this.state = {\r\n            name: props.name,\r\n            show: props.show,\r\n            children: props.children,\r\n            onClose: props.onClose,\r\n\r\n            //\r\n            open: false\r\n        }\r\n    }\n\n    static propTypes = {\r\n        children: PropTypes.node.isRequired,\r\n        onClickOutside: PropTypes.func.isRequired\r\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleOutsideClick);\r\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleOutsideClick);\r\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapperRef = node;\n    };\n\n    handleOutsideClick = (evt) => {\n        const { open } = this.state;\n\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target) && open) {\n            this.close();\n        }\r\n    };\n\n    renderModal = () => {\n        const showHideClassName = this.state.show ? \"modal display-block\" : \"modal display-none\";\n        \n        return (\n            <div className={showHideClassName} ref={this.setWrapperRef}>\n                <section className=\"modal-main\">\n                    {this.props.children}\n                    <button onClick={this.state.onClose}>\n                        close\n                    </button>\n                </section>\n            </div>\n        );\r\n    }\n    \n    render() {\n        return (\n            <React.Fragment>\n                {this.renderModal()}\n            </React.Fragment>\n        );\n        \r\n    }\n}"]},"metadata":{},"sourceType":"module"}