//---------------------------------------------------
//  SASS Prefixer
//---------------------------------------------------
//
//  -------------------------------------------------
//  TABLE OF CONTENTS
//  (*) denotes a syntax-sugar helper
//  -------------------------------------------------
//
//      .keyframes($name, $args)
//      .animation($args)
//          .animation-delay($delay)
//          .animation-direction($direction)
//          .animation-duration($duration)
//          .animation-fill-mode($mode)
//          .animation-iteration-count($count)
//          .animation-name($name)
//          .animation-play-state($state)
//          .animation-timing-function($function)
//      .background-size($args)
//      .border-radius($args)
//      .box-shadow($args)
//          .inner-shadow($args) *
//      .box-sizing($args)
//          .border-box() *
//          .content-box() *
//      .columns($args)
//          .column-count($count)
//          .column-gap($gap)
//          .column-rule($args)
//          .column-width($width)
//      .gradient($default,$start,$stop) *
//          .linear-gradient-top($default,$color1,$stop1,$color2,$stop2,[$color3,$stop3,$color4,$stop4])*
//          .linear-gradient-left($default,$color1,$stop1,$color2,$stop2,[$color3,$stop3,$color4,$stop4])*
//      .keyframes($name; $args)
//      .opacity($factor)
//      .transform($args)
//          .transform-origin($args)
//          .transform-style($style)
//          .rotate($deg)
//          .scale($factor)
//          .translate($x,$y)
//          .translate3d($x,$y,$z)
//          .translateHardware($x,$y) *
//      .text-shadow($args)
//      .transition($args)
//          .transition-delay($delay)
//          .transition-duration($duration)
//          .transition-property($property)
//          .transition-timing-function($function)
//      Flexbox:
//          .flex-block()
//          .flex-inline()
//              .flex-flow($direction: row, $wrap: nowrap)
//                  .flex-direction($direction: row)
//                  .flex-wrap($wrap: nowrap)
//              .justify-content($justification)
//              .align-items($mode)
//              .align-content($alignment)
//              .flex($args: none)
//                  .flex-grow($grow: 1)
//                  .flex-shrink($shrink: 1)
//                  .flex-basis($basis: auto)
//              .order($num: 0)
//              .align-self($align: auto)
//
//---------------------------------------------------


// Animation
@mixin keyframes($name, $args) {
    @-webkit-keyframes {
        -webkits-#{$name}: #{$args};
    }
    @keyframes #{$name} {
        #{$name}: #{$args};
    }
}

@mixin animation($args) {
    -webkit-animation: $args;
    animation: $args;
}

@mixin animation-delay($delay) {
    -webkit-animation-delay: $delay;
    animation-delay: $delay;
}

@mixin animation-direction($direction) {
    -webkit-animation-direction: $direction;
    -o-animation-direction: $direction;
}

@mixin animation-duration($duration) {
    -webkit-animation-duration: $duration;
    -o-animation-duration: $duration;
}

@mixin animation-fill-mode($mode) {
    -webkit-animation-fill-mode: $mode;
    animation-fill-mode: $mode;
}

@mixin animation-iteration-count($count) {
    -webkit-animation-iteration-count: $count;
    animation-iteration-count: $count;
}

@mixin animation-name($name) {
    -webkit-animation-name: $name;
    animation-name: $name;
}

@mixin animation-play-state($state) {
    -webkit-animation-play-state: $state;
    animation-play-state: $state;
}

@mixin animation-timing-function($function) {
    -webkit-animation-timing-function: $function;
    animation-timing-function: $function;
}


// Background Size

@mixin background-size($args) {
    background-size: $args;
}


// Border Radius

@mixin border-radius($args) {
    -webkit-border-radius: $args;
    -moz-border-radius: $args;
    border-radius: $args;
    background-clip: padding-box;
}


// Box Shadows

@mixin box-shadow($args) {
    -webkit-box-shadow: $args;
    -moz-box-shadow: $args;
    box-shadow: $args;
}

@mixin inner-shadow($args) {
    @include box-shadow(inset $args);
}


// Box Sizing

@mixin box-sizing($args) {
    -webkit-box-sizing: $args;
    -moz-box-sizing: $args;
    box-sizing: $args;
}

@mixin border-box() {
    @include box-sizing(border-box);
}

@mixin content-box() {
    @include box-sizing(content-box);
}


// Columns

@mixin columns($args) {
    -webkit-columns: $args;
    -moz-columns: $args;
    columns: $args;
}

@mixin column-count($count) {
    -webkit-column-count: $count;
    -moz-column-count: $count;
    column-count: $count;
}

@mixin column-gap($gap) {
    -webkit-column-gap: $gap;
    -moz-column-gap: $gap;
    column-gap: $gap;
}

@mixin column-width($width) {
    -webkit-column-width: $width;
    -moz-column-width: $width;
    column-width: $width;
}

@mixin column-rule($args) {
    -webkit-column-rule: $args;
    -moz-column-rule: $args;
    column-rule: $args;
}


// Gradients

@mixin gradient($default: #F5F5F5, $start: #EEE, $stop: #FFF) {
    @include linear-gradient-top($default,$start,0%,$stop,100%);
}

@mixin linear-gradient-top($default,$color1,$stop1,$color2,$stop2) {
    background-color: $default;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop($stop1, $color1), color-stop($stop2 $color2));
    background-image: -webkit-linear-gradient(top, $color1 $stop1, $color2 $stop2);
    background-image: -moz-linear-gradient(top, $color1 $stop1, $color2 $stop2);
    background-image: -ms-linear-gradient(top, $color1 $stop1, $color2 $stop2);
    background-image: -o-linear-gradient(top, $color1 $stop1, $color2 $stop2);
    background-image: linear-gradient(top, $color1 $stop1, $color2 $stop2);
}

@mixin linear-gradient-top($default,$color1,$stop1,$color2,$stop2,$color3,$stop3) {
    background-color: $default;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop($stop1, $color1), color-stop($stop2 $color2), color-stop($stop3 $color3));
    background-image: -webkit-linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3);
    background-image: -moz-linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3);
    background-image: -ms-linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3);
    background-image: -o-linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3);
    background-image: linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3);
}

@mixin linear-gradient-top($default,$color1,$stop1,$color2,$stop2,$color3,$stop3,$color4,$stop4) {
    background-color: $default;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop($stop1, $color1), color-stop($stop2 $color2), color-stop($stop3 $color3), color-stop($stop4 $color4));
    background-image: -webkit-linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
    background-image: -moz-linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
    background-image: -ms-linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
    background-image: -o-linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
    background-image: linear-gradient(top, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
}

@mixin linear-gradient-left($default,$color1,$stop1,$color2,$stop2) {
    background-color: $default;
    background-image: -webkit-gradient(linear, left top, left top, color-stop($stop1, $color1), color-stop($stop2 $color2));
    background-image: -webkit-linear-gradient(left, $color1 $stop1, $color2 $stop2);
    background-image: -moz-linear-gradient(left, $color1 $stop1, $color2 $stop2);
    background-image: -ms-linear-gradient(left, $color1 $stop1, $color2 $stop2);
    background-image: -o-linear-gradient(left, $color1 $stop1, $color2 $stop2);
    background-image: linear-gradient(left, $color1 $stop1, $color2 $stop2);
}

@mixin linear-gradient-left($default,$color1,$stop1,$color2,$stop2,$color3,$stop3) {
    background-color: $default;
    background-image: -webkit-gradient(linear, left top, left top, color-stop($stop1, $color1), color-stop($stop2 $color2), color-stop($stop3 $color3));
    background-image: -webkit-linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3);
    background-image: -moz-linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3);
    background-image: -ms-linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3);
    background-image: -o-linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3);
    background-image: linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3);
}

@mixin linear-gradient-left($default,$color1,$stop1,$color2,$stop2,$color3,$stop3,$color4,$stop4) {
    background-color: $default;
    background-image: -webkit-gradient(linear, left top, left top, color-stop($stop1, $color1), color-stop($stop2 $color2), color-stop($stop3 $color3), color-stop($stop4 $color4));
    background-image: -webkit-linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
    background-image: -moz-linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
    background-image: -ms-linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
    background-image: -o-linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
    background-image: linear-gradient(left, $color1 $stop1, $color2 $stop2, $color3 $stop3, $color4 $stop4);
}


// Opacity

@mixin opacity($factor) {
    $iefactor: $factor*100;
    filter: #{"alpha(opacity=${iefactor})"};
    opacity: $factor;
}


// Text Shadow

@mixin text-shadow($args) {
    text-shadow: $args;
}


// Transforms

@mixin transform($args) {
    -webkit-transform: $args;
    -ms-transform: $args;
    transform: $args;
}

@mixin transform-origin($args) {
    -webkit-transform-origin: $args;
    -ms-transform-origin: $args;
    transform-origin: $args;
}

@mixin transform-style($style) {
    -webkit-transform-style: $style;
    -ms-transform-style: $style;
    transform-style: $style;
}

@mixin rotate($deg: 45deg) {
    @include transform(rotate($deg));
}

@mixin scale($factor: .5) {
    @include transform(scale($factor));
}

@mixin translate($x,$y) {
    @include transform(translate($x,$y));
}

@mixin translate3d($x,$y,$z) {
    @include transform(translate3d($x,$y,$z));
}

@mixin translateHardware($x,$y) {
    @include translate($x,$y);
    -webkit-transform: translate3d($x,$y,0);
    -o-transform: translate3d($x,$y,0);
    transform: translate3d($x,$y,0);
}


// Transitions

@mixin transition($args: 200ms) {
    transition: $args;
}

@mixin transition-delay($delay: 0) {
    transition-delay: $delay;
}

@mixin transition-duration($duration: 200ms) {
    transition-duration: $duration;
}

@mixin transition-property($property: all) {
    transition-property: $property;
}

@mixin transition-timing-function($function: ease) {
    transition-timing-function: $function;
}


// Flexbox

@mixin flex-block() {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin flex-inline() {
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
}

@mixin flex-flow($direction: row, $wrap: nowrap) {
    -webkit-flex-flow: $direction $wrap;
    -moz-flex-flow: $direction $wrap;
    -ms-flex-direction: $direction;
    -ms-flex-wrap: $wrap;
    flex-flow: $direction $wrap;
}

@mixin align-content($alignment) {
    -webkit-align-content: $alignment;
    -moz-align-content: $alignment;
    -ms-align-content: $alignment;
    align-content: $alignment;
}

@mixin flex-direction($direction: row) {
    -webkit-flex-direction: $direction;
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

@mixin flex-wrap($wrap: nowrap) {
    -webkit-flex-wrap: $wrap;
    -moz-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

@mixin justify-content($justification) {
    -webkit-box-pack: $justification;
    -moz-box-pack: $justification;
    -ms-flex-pack: replace($justification, "flex-", "");
    -webkit-justify-content: $justification;
    justify-content: $justification;
}

@mixin align-items($mode) {
    -webkit-align-items: $mode;
    -webkit-box-align: $mode;
    -moz-box-align: $mode;
    -ms-flex-align: $mode;
    align-items: $mode;
}

@mixin flex($args: none) {
    -webkit-flex: $args;
    -moz-flex: $args;
    -ms-flex: $args;
    flex: $args;
}

@mixin order($order: 0) {
    -webkit-box-ordinal-group: $order;
    -moz-box-ordinal-group: $order;
    -ms-box-ordinal-group: $order;
    -ms-flex-order: $order;
    -webkit-order: $order;
    -moz-order: $order;
    -ms-order: $order;
    order: $order;
}

@mixin flex-grow($grow: 1) {
    -webkit-flex-grow: $grow;
    -moz-flex-grow: $grow;
    -ms-flex-grow: $grow;
    flex-grow: $grow;
}

@mixin flex-shrink($shrink: 1) {
    -webkit-flex-shrink: $shrink;
    -moz-flex-shrink: $shrink;
    -ms-flex-shrink: $shrink;
    flex-shrink: $shrink;
}

@mixin flex-basis($basis: auto) {
    -webkit-flex-basis: $basis;
    -moz-flex-basis: $basis;
    -ms-flex-basis: $basis;
    flex-basis: $basis;
}

@mixin align-self($align: auto) {
    -webkit-align-self: $align;
    -moz-align-self: $align;
    -ms-align-self: $align;
    align-self: $align;
}
